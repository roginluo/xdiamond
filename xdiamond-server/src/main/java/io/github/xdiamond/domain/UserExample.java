package io.github.xdiamond.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserExample {
    /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table user
   * @mbggenerated
   */
  protected String orderByClause;
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table user
   * @mbggenerated
   */
  protected boolean distinct;
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table user
   * @mbggenerated
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public UserExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table user
   * @mbggenerated
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table user
   * @mbggenerated
   */
  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andIdIsNull() {
      addCriterion("id is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("id is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(Integer value) {
      addCriterion("id =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(Integer value) {
      addCriterion("id <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(Integer value) {
      addCriterion("id >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("id >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(Integer value) {
      addCriterion("id <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(Integer value) {
      addCriterion("id <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<Integer> values) {
      addCriterion("id in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<Integer> values) {
      addCriterion("id not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(Integer value1, Integer value2) {
      addCriterion("id between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(Integer value1, Integer value2) {
      addCriterion("id not between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andNameIsNull() {
      addCriterion("k_name is null");
      return (Criteria) this;
    }

    public Criteria andNameIsNotNull() {
      addCriterion("k_name is not null");
      return (Criteria) this;
    }

    public Criteria andNameEqualTo(String value) {
      addCriterion("k_name =", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotEqualTo(String value) {
      addCriterion("k_name <>", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameGreaterThan(String value) {
      addCriterion("k_name >", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameGreaterThanOrEqualTo(String value) {
      addCriterion("k_name >=", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameLessThan(String value) {
      addCriterion("k_name <", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameLessThanOrEqualTo(String value) {
      addCriterion("k_name <=", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameLike(String value) {
      addCriterion("k_name like", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotLike(String value) {
      addCriterion("k_name not like", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameIn(List<String> values) {
      addCriterion("k_name in", values, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotIn(List<String> values) {
      addCriterion("k_name not in", values, "name");
      return (Criteria) this;
    }

    public Criteria andNameBetween(String value1, String value2) {
      addCriterion("k_name between", value1, value2, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotBetween(String value1, String value2) {
      addCriterion("k_name not between", value1, value2, "name");
      return (Criteria) this;
    }

    public Criteria andNickNameIsNull() {
      addCriterion("nickName is null");
      return (Criteria) this;
    }

    public Criteria andNickNameIsNotNull() {
      addCriterion("nickName is not null");
      return (Criteria) this;
    }

    public Criteria andNickNameEqualTo(String value) {
      addCriterion("nickName =", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameNotEqualTo(String value) {
      addCriterion("nickName <>", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameGreaterThan(String value) {
      addCriterion("nickName >", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameGreaterThanOrEqualTo(String value) {
      addCriterion("nickName >=", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameLessThan(String value) {
      addCriterion("nickName <", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameLessThanOrEqualTo(String value) {
      addCriterion("nickName <=", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameLike(String value) {
      addCriterion("nickName like", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameNotLike(String value) {
      addCriterion("nickName not like", value, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameIn(List<String> values) {
      addCriterion("nickName in", values, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameNotIn(List<String> values) {
      addCriterion("nickName not in", values, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameBetween(String value1, String value2) {
      addCriterion("nickName between", value1, value2, "nickName");
      return (Criteria) this;
    }

    public Criteria andNickNameNotBetween(String value1, String value2) {
      addCriterion("nickName not between", value1, value2, "nickName");
      return (Criteria) this;
    }

    public Criteria andPasswordIsNull() {
      addCriterion("k_password is null");
      return (Criteria) this;
    }

    public Criteria andPasswordIsNotNull() {
      addCriterion("k_password is not null");
      return (Criteria) this;
    }

    public Criteria andPasswordEqualTo(String value) {
      addCriterion("k_password =", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotEqualTo(String value) {
      addCriterion("k_password <>", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordGreaterThan(String value) {
      addCriterion("k_password >", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordGreaterThanOrEqualTo(String value) {
      addCriterion("k_password >=", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLessThan(String value) {
      addCriterion("k_password <", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLessThanOrEqualTo(String value) {
      addCriterion("k_password <=", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLike(String value) {
      addCriterion("k_password like", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotLike(String value) {
      addCriterion("k_password not like", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordIn(List<String> values) {
      addCriterion("k_password in", values, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotIn(List<String> values) {
      addCriterion("k_password not in", values, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordBetween(String value1, String value2) {
      addCriterion("k_password between", value1, value2, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotBetween(String value1, String value2) {
      addCriterion("k_password not between", value1, value2, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltIsNull() {
      addCriterion("passwordSalt is null");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltIsNotNull() {
      addCriterion("passwordSalt is not null");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltEqualTo(String value) {
      addCriterion("passwordSalt =", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltNotEqualTo(String value) {
      addCriterion("passwordSalt <>", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltGreaterThan(String value) {
      addCriterion("passwordSalt >", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltGreaterThanOrEqualTo(String value) {
      addCriterion("passwordSalt >=", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltLessThan(String value) {
      addCriterion("passwordSalt <", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltLessThanOrEqualTo(String value) {
      addCriterion("passwordSalt <=", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltLike(String value) {
      addCriterion("passwordSalt like", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltNotLike(String value) {
      addCriterion("passwordSalt not like", value, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltIn(List<String> values) {
      addCriterion("passwordSalt in", values, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltNotIn(List<String> values) {
      addCriterion("passwordSalt not in", values, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltBetween(String value1, String value2) {
      addCriterion("passwordSalt between", value1, value2, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andPasswordSaltNotBetween(String value1, String value2) {
      addCriterion("passwordSalt not between", value1, value2, "passwordSalt");
      return (Criteria) this;
    }

    public Criteria andEmailIsNull() {
      addCriterion("email is null");
      return (Criteria) this;
    }

    public Criteria andEmailIsNotNull() {
      addCriterion("email is not null");
      return (Criteria) this;
    }

    public Criteria andEmailEqualTo(String value) {
      addCriterion("email =", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailNotEqualTo(String value) {
      addCriterion("email <>", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailGreaterThan(String value) {
      addCriterion("email >", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailGreaterThanOrEqualTo(String value) {
      addCriterion("email >=", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailLessThan(String value) {
      addCriterion("email <", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailLessThanOrEqualTo(String value) {
      addCriterion("email <=", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailLike(String value) {
      addCriterion("email like", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailNotLike(String value) {
      addCriterion("email not like", value, "email");
      return (Criteria) this;
    }

    public Criteria andEmailIn(List<String> values) {
      addCriterion("email in", values, "email");
      return (Criteria) this;
    }

    public Criteria andEmailNotIn(List<String> values) {
      addCriterion("email not in", values, "email");
      return (Criteria) this;
    }

    public Criteria andEmailBetween(String value1, String value2) {
      addCriterion("email between", value1, value2, "email");
      return (Criteria) this;
    }

    public Criteria andEmailNotBetween(String value1, String value2) {
      addCriterion("email not between", value1, value2, "email");
      return (Criteria) this;
    }

    public Criteria andCreateTimeIsNull() {
      addCriterion("createTime is null");
      return (Criteria) this;
    }

    public Criteria andCreateTimeIsNotNull() {
      addCriterion("createTime is not null");
      return (Criteria) this;
    }

    public Criteria andCreateTimeEqualTo(Date value) {
      addCriterion("createTime =", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeNotEqualTo(Date value) {
      addCriterion("createTime <>", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeGreaterThan(Date value) {
      addCriterion("createTime >", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("createTime >=", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeLessThan(Date value) {
      addCriterion("createTime <", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
      addCriterion("createTime <=", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeIn(List<Date> values) {
      addCriterion("createTime in", values, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeNotIn(List<Date> values) {
      addCriterion("createTime not in", values, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeBetween(Date value1, Date value2) {
      addCriterion("createTime between", value1, value2, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
      addCriterion("createTime not between", value1, value2, "createTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeIsNull() {
      addCriterion("updateTime is null");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeIsNotNull() {
      addCriterion("updateTime is not null");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeEqualTo(Date value) {
      addCriterion("updateTime =", value, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeNotEqualTo(Date value) {
      addCriterion("updateTime <>", value, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeGreaterThan(Date value) {
      addCriterion("updateTime >", value, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("updateTime >=", value, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeLessThan(Date value) {
      addCriterion("updateTime <", value, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
      addCriterion("updateTime <=", value, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeIn(List<Date> values) {
      addCriterion("updateTime in", values, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeNotIn(List<Date> values) {
      addCriterion("updateTime not in", values, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeBetween(Date value1, Date value2) {
      addCriterion("updateTime between", value1, value2, "updateTime");
      return (Criteria) this;
    }

    public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
      addCriterion("updateTime not between", value1, value2, "updateTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeIsNull() {
      addCriterion("lastLoginTime is null");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeIsNotNull() {
      addCriterion("lastLoginTime is not null");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeEqualTo(Date value) {
      addCriterion("lastLoginTime =", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeNotEqualTo(Date value) {
      addCriterion("lastLoginTime <>", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeGreaterThan(Date value) {
      addCriterion("lastLoginTime >", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("lastLoginTime >=", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeLessThan(Date value) {
      addCriterion("lastLoginTime <", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeLessThanOrEqualTo(Date value) {
      addCriterion("lastLoginTime <=", value, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeIn(List<Date> values) {
      addCriterion("lastLoginTime in", values, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeNotIn(List<Date> values) {
      addCriterion("lastLoginTime not in", values, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeBetween(Date value1, Date value2) {
      addCriterion("lastLoginTime between", value1, value2, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLastLoginTimeNotBetween(Date value1, Date value2) {
      addCriterion("lastLoginTime not between", value1, value2, "lastLoginTime");
      return (Criteria) this;
    }

    public Criteria andLoginCountIsNull() {
      addCriterion("loginCount is null");
      return (Criteria) this;
    }

    public Criteria andLoginCountIsNotNull() {
      addCriterion("loginCount is not null");
      return (Criteria) this;
    }

    public Criteria andLoginCountEqualTo(Integer value) {
      addCriterion("loginCount =", value, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountNotEqualTo(Integer value) {
      addCriterion("loginCount <>", value, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountGreaterThan(Integer value) {
      addCriterion("loginCount >", value, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountGreaterThanOrEqualTo(Integer value) {
      addCriterion("loginCount >=", value, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountLessThan(Integer value) {
      addCriterion("loginCount <", value, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountLessThanOrEqualTo(Integer value) {
      addCriterion("loginCount <=", value, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountIn(List<Integer> values) {
      addCriterion("loginCount in", values, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountNotIn(List<Integer> values) {
      addCriterion("loginCount not in", values, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountBetween(Integer value1, Integer value2) {
      addCriterion("loginCount between", value1, value2, "loginCount");
      return (Criteria) this;
    }

    public Criteria andLoginCountNotBetween(Integer value1, Integer value2) {
      addCriterion("loginCount not between", value1, value2, "loginCount");
      return (Criteria) this;
    }

    public Criteria andProviderIsNull() {
      addCriterion("provider is null");
      return (Criteria) this;
    }

    public Criteria andProviderIsNotNull() {
      addCriterion("provider is not null");
      return (Criteria) this;
    }

    public Criteria andProviderEqualTo(String value) {
      addCriterion("provider =", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderNotEqualTo(String value) {
      addCriterion("provider <>", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderGreaterThan(String value) {
      addCriterion("provider >", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderGreaterThanOrEqualTo(String value) {
      addCriterion("provider >=", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderLessThan(String value) {
      addCriterion("provider <", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderLessThanOrEqualTo(String value) {
      addCriterion("provider <=", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderLike(String value) {
      addCriterion("provider like", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderNotLike(String value) {
      addCriterion("provider not like", value, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderIn(List<String> values) {
      addCriterion("provider in", values, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderNotIn(List<String> values) {
      addCriterion("provider not in", values, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderBetween(String value1, String value2) {
      addCriterion("provider between", value1, value2, "provider");
      return (Criteria) this;
    }

    public Criteria andProviderNotBetween(String value1, String value2) {
      addCriterion("provider not between", value1, value2, "provider");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table user
   * @mbggenerated
   */
  public static class Criterion {
    private String condition;
    private Object value;
    private Object secondValue;
    private boolean noValue;
    private boolean singleValue;
    private boolean betweenValue;
    private boolean listValue;
    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}